{
  "openapi": "3.1.0",
  "info": {
    "version": "1.0.0",
    "title": "Spendy - Expense Tracker App",
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "description": "API documentation of Spendy Expense Tracker App"
  },
  "servers": [
    {
      "url": "http://localhost:3000"
    },
    {
      "url": "https://example.com/api/v1"
    }
  ],
  "tags": [
    {
      "name": "Users",
      "description": "Operations about users."
    },
    {
      "name": "Auth",
      "description": "Auth operations."
    },
    {
      "name": "Transactions",
      "description": "Operations related to user transactions."
    }
  ],
  "paths": {
    "/categories": {
      "get": {
        "tags": [
          "Categories"
        ],
        "summary": "Get predefined income and expense categories",
        "operationId": "getCategories",
        "description": "Get list of categories with this endpoint",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully fetched categories!",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully fetched categories!"
                    },
                    "incomeCategories": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "example": [
                        "Incomes"
                      ]
                    },
                    "expenseCategories": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "example": [
                        "Main expenses",
                        "Self сare",
                        "Child, care",
                        "Products",
                        "Car",
                        "Education",
                        "Leisure",
                        "Household products",
                        "Entertainment",
                        "Other expenses"
                      ]
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/statistics/summary": {
      "get": {
        "get": {
          "tags": [
            "Statistics"
          ],
          "summary": "Get income/expense report for a specific month",
          "description": "Returns total amounts of income and expenses grouped by categories for the selected month.",
          "parameters": [
            {
              "in": "query",
              "name": "month",
              "required": true,
              "schema": {
                "type": "string",
                "example": "2024-11"
              },
              "description": "Month in YYYY-MM format"
            }
          ],
          "responses": {
            "200": {
              "description": "Successful response",
              "content": {
                "application/json": {
                  "example": [
                    {
                      "type": "expense",
                      "totalAmount": 350,
                      "categories": [
                        {
                          "category": "Food",
                          "total": 200
                        },
                        {
                          "category": "Transport",
                          "total": 150
                        }
                      ]
                    },
                    {
                      "type": "income",
                      "totalAmount": 3000,
                      "categories": [
                        {
                          "category": "Salary",
                          "total": 3000
                        }
                      ]
                    }
                  ]
                }
              }
            },
            "400": {
              "description": "Invalid or missing month parameter"
            },
            "401": {
              "description": "Unauthorized – Access token missing or expired"
            }
          },
          "security": [
            {
              "bearerAuth": []
            }
          ]
        }
      }
    },
    "/transactions": {
      "get": {
        "summary": "Get all transactions",
        "description": "Returns a list of all transactions belonging to the authenticated user.",
        "tags": [
          "Transactions"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Transactions fetched successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Transactions fetched successfully!"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/transactions"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Invalid or missing token"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/transactions/{id}": {
      "delete": {
        "summary": "Delete a transaction",
        "description": "Deletes a specific transaction by ID belonging to the authenticated user.",
        "tags": [
          "Transactions"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "ID of the transaction to delete",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Transaction deleted successfully (No Content)"
          },
          "401": {
            "description": "Unauthorized - Invalid or missing token"
          },
          "404": {
            "description": "Transaction not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "put": {
        "summary": "Update a transaction",
        "tags": [
          "Transactions"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Transaction ID"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "amount",
                  "category",
                  "date",
                  "type"
                ],
                "properties": {
                  "amount": {
                    "type": "number",
                    "example": 150.5
                  },
                  "category": {
                    "type": "string",
                    "example": "Utilities"
                  },
                  "date": {
                    "type": "string",
                    "format": "date",
                    "example": "2025-05-18"
                  },
                  "type": {
                    "type": "string",
                    "enum": [
                      "+",
                      "-"
                    ],
                    "example": "-"
                  },
                  "comment": {
                    "type": "string",
                    "example": "Paid for gas"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Transaction successfully updated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "success"
                    },
                    "code": {
                      "type": "integer",
                      "example": 200
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "transaction": {
                          "type": "object",
                          "example": {
                            "_id": "682b830e2e994e13ac53c7e5",
                            "userId": "682b827b2e994e13ac53c7dd",
                            "type": "-",
                            "amount": 150.5,
                            "category": "Utilities",
                            "date": "2025-05-18",
                            "comment": "Paid for gas",
                            "createdAt": "2025-05-19T19:14:22.538Z",
                            "updatedAt": "2025-05-19T19:25:00.123Z"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/auth/logout": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Logout user",
        "operationId": "logoutUser",
        "description": "Logout user",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "204": {
            "description": "Logout a user"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer"
      }
    },
    "responses": {
      "400": {
        "description": "Bad Request",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "message",
                "data"
              ],
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 400
                },
                "message": {
                  "type": "string",
                  "example": "BadRequestError"
                },
                "data": {
                  "type": "object",
                  "required": [
                    "message"
                  ],
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Invalid or missing contact ID or malformed request data. Please check your input and try again."
                    }
                  }
                }
              }
            }
          }
        }
      },
      "401": {
        "description": "Unauthorized error",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "message",
                "data"
              ],
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 401
                },
                "message": {
                  "type": "string",
                  "example": "UnauthorizedError"
                },
                "data": {
                  "type": "object",
                  "required": [
                    "message"
                  ],
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Access token expired"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "404": {
        "description": "Not found",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "message",
                "data"
              ],
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 404
                },
                "message": {
                  "type": "string",
                  "example": "NotFoundError"
                },
                "data": {
                  "type": "object",
                  "required": [
                    "message"
                  ],
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Contact or user not found"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "500": {
        "description": "Internal server error",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "message",
                "data"
              ],
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 500
                },
                "message": {
                  "type": "string",
                  "example": "InternalServerError"
                },
                "data": {
                  "type": "object",
                  "required": [
                    "message"
                  ],
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Something went wrong"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "schemas": {
      "transactions": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "description": "Unique identifier for the transaction",
            "example": "66507f2cabc1234567890abc"
          },
          "userId": {
            "type": "string",
            "description": "ID of the user who owns the transaction",
            "example": "664abcdeff1234567890abcd"
          },
          "type": {
            "type": "string",
            "enum": [
              "+",
              "-"
            ],
            "description": "Transaction type — income (\"+\") or expense (\"-\")",
            "example": "+"
          },
          "amount": {
            "type": "number",
            "format": "float",
            "description": "Amount of the transaction",
            "example": 100.5
          },
          "category": {
            "type": "string",
            "description": "Category of the transaction",
            "example": "Food"
          },
          "date": {
            "type": "string",
            "format": "date-time",
            "description": "Date of the transaction",
            "example": "2024-05-20T12:34:56.789Z"
          },
          "comment": {
            "type": "string",
            "description": "Optional comment about the transaction",
            "example": "Grocery shopping"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "example": "2024-05-20T12:34:56.789Z"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "example": "2024-05-21T08:15:00.000Z"
          }
        },
        "required": [
          "userId",
          "type",
          "amount",
          "category",
          "date"
        ]
      }
    }
  }
}