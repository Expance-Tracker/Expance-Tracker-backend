{
  "openapi": "3.1.0",
  "info": {
    "version": "1.0.0",
    "title": "Spendy - Expense Tracker App",
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "description": "API documentation of Spendy Expense Tracker App"
  },
  "servers": [
    {
      "url": "http://localhost:3000"
    },
    {
      "url": "https://example.com/api/v1"
    }
  ],
  "tags": [
    {
      "name": "Users",
      "description": "Operations about users."
    },
    {
      "name": "Auth",
      "description": "Auth operations."
    },
    {
      "name": "Transactions",
      "description": "Operations for managing transactions."
    }
  ],
  "paths": {
    "/categories": {
      "get": {
        "tags": [
          "Categories"
        ],
        "summary": "Get predefined income and expense categories",
        "operationId": "getCategories",
        "description": "Get list of categories with this endpoint",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully fetched categories!",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully fetched categories!"
                    },
                    "incomeCategories": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "example": [
                        "Incomes"
                      ]
                    },
                    "expenseCategories": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "example": [
                        "Main expenses",
                        "Self сare",
                        "Child, care",
                        "Products",
                        "Car",
                        "Education",
                        "Leisure",
                        "Household products",
                        "Entertainment",
                        "Other expenses"
                      ]
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/auth/logout": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Logout user",
        "operationId": "logoutUser",
        "description": "Logout user",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "204": {
            "description": "Logout a user"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/transactions": {
      "post": {
        "tags": [
          "Transactions"
        ],
        "summary": "Create transaction",
        "operationId": "createTransaction",
        "description": "Create a new transaction",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "type",
                  "amount",
                  "category",
                  "date"
                ],
                "properties": {
                  "type": {
                    "description": "Transaction type (income or expense)",
                    "type": "string",
                    "enum": [
                      "income",
                      "expense"
                    ],
                    "example": "income"
                  },
                  "amount": {
                    "description": "Transaction amount",
                    "type": "number",
                    "format": "double",
                    "minimum": 0,
                    "example": 1000
                  },
                  "category": {
                    "description": "Transaction category",
                    "type": "string",
                    "example": "Incomes"
                  },
                  "date": {
                    "description": "Transaction date",
                    "type": "string",
                    "format": "date-time",
                    "example": "2025-04-23T10:00:00Z"
                  },
                  "comment": {
                    "description": "Transaction comment (optional)",
                    "type": "string",
                    "example": "Зарплата"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Creates a transaction",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 201
                    },
                    "message": {
                      "type": "string",
                      "example": "Transaction created successfully"
                    },
                    "data": {
                      "$ref": "#/components/schemas/transactions"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      },
      "get": {
        "tags": [
          "Transactions"
        ],
        "summary": "Get list of transactions",
        "operationId": "getTransactions",
        "description": "Get list of transactions for current user",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully found transactions!",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Transactions fetched successfully!"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/transactions"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer"
      }
    },
    "responses": {
      "400": {
        "description": "Bad Request",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "message",
                "data"
              ],
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 400
                },
                "message": {
                  "type": "string",
                  "example": "BadRequestError"
                },
                "data": {
                  "type": "object",
                  "required": [
                    "message"
                  ],
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Invalid or missing contact ID or malformed request data. Please check your input and try again."
                    }
                  }
                }
              }
            }
          }
        }
      },
      "401": {
        "description": "Unauthorized error",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "message",
                "data"
              ],
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 401
                },
                "message": {
                  "type": "string",
                  "example": "UnauthorizedError"
                },
                "data": {
                  "type": "object",
                  "required": [
                    "message"
                  ],
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Access token expired"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "404": {
        "description": "Not found",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "message",
                "data"
              ],
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 404
                },
                "message": {
                  "type": "string",
                  "example": "NotFoundError"
                },
                "data": {
                  "type": "object",
                  "required": [
                    "message"
                  ],
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Contact or user not found"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "500": {
        "description": "Internal server error",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "message",
                "data"
              ],
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 500
                },
                "message": {
                  "type": "string",
                  "example": "InternalServerError"
                },
                "data": {
                  "type": "object",
                  "required": [
                    "message"
                  ],
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Something went wrong"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "schemas": {
      "transactions": {
        "type": "object",
        "required": [
          "_id",
          "userId",
          "type",
          "amount",
          "category",
          "date"
        ],
        "properties": {
          "_id": {
            "description": "Transaction id",
            "type": "string",
            "example": "645a1b2c3d4e5f6789abcdef"
          },
          "userId": {
            "description": "User id",
            "type": "string",
            "example": "645a1b2c3d4e5f6789abcde0"
          },
          "type": {
            "description": "Transaction type",
            "type": "string",
            "enum": [
              "income",
              "expense"
            ],
            "example": "income"
          },
          "amount": {
            "description": "Transaction amount",
            "type": "number",
            "example": 1000
          },
          "category": {
            "description": "Transaction category",
            "type": "string",
            "example": "Incomes"
          },
          "date": {
            "description": "Transaction date",
            "type": "string",
            "format": "date-time",
            "example": "2025-04-23T10:00:00.000Z"
          },
          "comment": {
            "description": "Transaction comment",
            "type": "string",
            "example": "Зарплата"
          },
          "createdAt": {
            "description": "Creation timestamp",
            "type": "string",
            "format": "date-time",
            "example": "2025-05-21T12:34:56.789Z"
          },
          "updatedAt": {
            "description": "Last update timestamp",
            "type": "string",
            "format": "date-time",
            "example": "2025-05-21T12:34:56.789Z"
          }
        }
      }
    }
  }
}